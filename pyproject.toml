[project]
name = "bs-translator-backend"
dynamic = ["version"]
authors = [{name = "Data Competence Center Basel-Stadt", email = "dcc@bs.ch" },{ name = "Tobias Bollinger", email = "tobias.bollinger@bs.ch" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.12,<4.0"
license = "MIT"
license-files = ["LICEN[CS]E*"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "dependency-injector>=4.48.1",
    "docling>=2.42.0",
    "fastapi[standard]>=0.116.1",
    "httpx>=0.28.1",
    "langdetect>=1.0.9",
    "llama-index-core>=0.12.34.post1",
    "llama-index-llms-openai>=0.3.38",
    "llama-index-llms-openai-like>=0.3.4",
    "llama-index-readers-file>=0.4.7",
    "openai>=1.97.0",
    "python-docx>=1.2.0",
    "python-dotenv>=1.0.1",
    "returns[compatible-mypy]>=0.25.0",
    "structlog>=25.1.0",
    "version-pioneer>=0.0.13",
]

[project.urls]
Homepage = "https://DCC-BS.github.io/bs-translator-backend/"
Repository = "https://github.com/DCC-BS/bs-translator-backend"
Documentation = "https://DCC-BS.github.io/bs-translator-backend/"

[dependency-groups]
dev = [
    "coverage>=7.6.12",
    "pytest>=8.3.4",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "basedpyright>=1.27.1",
    "ruff>=0.9.2",
    "rich>=13.9.4",
    "pytest-asyncio>=1.1.0",
]

[build-system]
requires = ["hatchling","version-pioneer>=0.0.13"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "version-pioneer"

[tool.version-pioneer]
versionscript = "src/bs_translator_backend/_version.py"  # Where to "read" the Version-Pioneer script (to execute `get_version_dict()`).
versionfile-sdist = "src/bs_translator_backend/_version.py"  # Where to "write" the version dict for sdist.
versionfile-wheel = "src/bs_translator_backend/_version.py"  # Where to "write" the version dict for wheel.

exclude = [
    "**/__pycache__",
    "**/.venv",
    "**/.*"
]
defineConstant = { DEBUG = true }
pythonVersion = "3.12"
stubPath = "src/bs_translator_backend/stubs"
reportExplicitAny = false


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
# Group imports by type (standard library, third-party, first-party).
combine-as-imports = true
force-wrap-aliases = true

[tool.mypy]
# Enable returns plugin
plugins = ["returns.contrib.mypy.returns_plugin"]
# Python version
python_version = "3.13"
# Path to look for imports
mypy_path = ["src"]
# Strict mode - catches more bugs but can be stricter
strict = true
# Disallow dynamic typing
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
no_implicit_optional = true
strict_optional = true
# Warnings as errors
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
# Error messages
pretty = true
show_column_numbers = true
show_error_context = true
# Advanced
exclude = ["tests/", "venv/", ".venv/"]
implicit_reexport = false
# Allow for untyped implementations in specific cases
allow_untyped_globals = false
# Package configuration
namespace_packages = true
explicit_package_bases = true
